services:
  db:
    container_name: student_planner_db
    image: postgres:16.4-alpine
    hostname: postgreshost
    user: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=hunter2
      - POSTGRES_DB=planner
    volumes:
      - planner-db:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres -d planner' ]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    container_name: student_planner_backend
    depends_on:
      db:
        condition: service_healthy
    build:
      context: student-planner-backend
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  frontend:
    container_name: student_planner_frontend
    depends_on:
      backend:
        condition: service_healthy
    build:
      context: student-planner-frontend
    ports:
      - '3000:3000'


volumes:
  planner-db:
    driver: local